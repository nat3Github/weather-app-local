name: Build MacOs, Windows, Linux

on:
  workflow_dispatch:
    inputs:
      release_tag:
        description: "Specify a tag name for manual release (e.g., v1.0.0). Required for manual releases."
        required: false
        type: string
  push:
    tags: ["v*"]

permissions:
  contents: write

jobs:
  macos:
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Zig
        uses: goto-bus-stop/setup-zig@v2
        with:
          version: 0.14.1

      - name: Create .env file
        run: |
          mkdir -p src/lib
          echo "maptiler_api_key = ${{ secrets.MAPTILER_API_KEY }}" > src/lib/.env
        shell: bash

      - name: Build MacOs Arm64
        run: zig build release

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: aarch64-macos-none
          path: zig-out/bin

  linux-windows:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-windows-gnu
          - os: ubuntu-latest
            target: x86_64-linux-gnu
          - os: ubuntu-latest
            target: aarch64-linux-gnu
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Zig
        uses: goto-bus-stop/setup-zig@v2
        with:
          version: 0.14.1

      - name: Create .env file
        run: |
          mkdir -p src/lib
          echo "maptiler_api_key = ${{ secrets.MAPTILER_API_KEY }}" > src/lib/.env
        shell: bash

      - name: Build Zig application for ${{ matrix.target }} on ${{ matrix.os }}
        run: zig build release -Dtarget=${{ matrix.target }}

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.target }}
          path: zig-out/bin

  release:
    runs-on: ubuntu-latest
    needs: [macos, linux-windows]
    if: |
      startsWith(github.ref, 'refs/tags/') ||
      (github.event_name == 'workflow_dispatch' && github.event.inputs.release_tag != '')
    steps:
      - name: Download macOS aarch64 artifact
        uses: actions/download-artifact@v4
        with:
          name: aarch64-macos-none
          path: macos-aarch64

      - name: Download Windows artifact
        uses: actions/download-artifact@v4
        with:
          name: x86_64-windows-gnu
          path: windows-x86_64

      - name: Download Linux artifact
        uses: actions/download-artifact@v4
        with:
          name: x86_64-linux-gnu
          path: linux-x86_64

      - name: Download Linux artifact
        uses: actions/download-artifact@v4
        with:
          name: aarch64-linux-gnu
          path: linux-aarch64

      - name: Prepare and zip release files
        run: |
          zip -r macos-aarch64.zip macos-aarch64
          zip -r windows-x86_64.zip windows-x86_64
          zip -r linux-x86_64.zip linux-x86_64
          zip -r linux-aarch64.zip linux-aarch64
        shell: bash

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.release_tag || github.ref }}
          name: Release ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.release_tag || github.ref }}
          body: |
            Automated release from GitHub Actions.

            Binaries for macOS (Intel & ARM64), Windows (GNU), and Linux.
          files: |
            macos-aarch64.zip
            windows-x86_64.zip
            linux-x86_64.zip
            linux-aarch64.zip
