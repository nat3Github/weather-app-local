name: Zig Build

on:
  workflow_dispatch:
    inputs:
      release_tag:
        description: "Specify a tag name for manual release (e.g., v1.0.0). Required for manual releases."
        required: false
        type: string
  push:
    tags: ["v*"]

permissions:
  contents: write

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: macos-latest
            target: x86_64-macos # macOS Intel
          - os: macos-latest
            target: aarch64-macos # macOS ARM64 (Apple Silicon)
          - os: windows-latest
            target: x86_64-windows-msvc
          - os: ubuntu-latest
            target: x86_64-linux
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Zig
        uses: goto-bus-stop/setup-zig@v2
        with:
          version: 0.14.1

      - name: Create .env file
        run: |
          mkdir -p src/lib
          echo "maptiler_api_key = ${{ secrets.MAPTILER_API_KEY }}" > src/lib/.env
        shell: bash

      - name: Build Zig application for ${{ matrix.target }} on ${{ matrix.os }}
        run: zig build release # use the build step 'release'

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: binary-${{ matrix.target }} # Use target for unique artifact names
          path: zig-out/bin

  release:
    runs-on: ubuntu-latest
    needs: build
    if: |
      startsWith(github.ref, 'refs/tags/') ||
      (github.event_name == 'workflow_dispatch' && github.event.inputs.release_tag != '')
    steps:
      - name: Download macOS x86_64 artifact
        uses: actions/download-artifact@v4
        with:
          name: binary-x86_64-macos
          path: dist/macos-x86_64

      - name: Download macOS aarch64 artifact
        uses: actions/download-artifact@v4
        with:
          name: binary-aarch64-macos
          path: dist/macos-aarch64

      - name: Download Windows artifact
        uses: actions/download-artifact@v4
        with:
          name: binary-x86_64-windows-msvc
          path: dist/windows-x86_64

      - name: Download Linux artifact
        uses: actions/download-artifact@v4
        with:
          name: binary-x86_64-linux
          path: dist/linux-x86_64

      - name: Prepare release files
        run: |
          # The executable name from your build script is "Weather-App-Local"
          # Zip up the binaries for release
          zip -r dist/weather-app-local-macos-x86_64.zip dist/macos-x86_64
          zip -r dist/weather-app-local-macos-aarch64.zip dist/macos-aarch64
          zip -r dist/weather-app-local-windows-x86_64.zip dist/windows-x86_64
          zip -r dist/weather-app-local-linux-x86_64.zip dist/linux-x86_64
        shell: bash

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.release_tag || github.ref }}
          name: Release ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.release_tag || github.ref }}
          body: |
            Automated release from GitHub Actions.

            Binaries for macOS (Intel & ARM64), Windows, and Linux.
          files: |
            dist/weather-app-local-macos-x86_64.zip
            dist/weather-app-local-macos-aarch64.zip
            dist/weather-app-local-windows-x86_64.zip
            dist/weather-app-local-linux-x86_64.zip
